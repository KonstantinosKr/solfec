Energy balance is not robust
-----------------------------------------
Merit function for convergence control
needs more thought
--------------------------------------------------
Compute per-block merit functions and sort blocks
according to their values.  During Gauss-Seidel
iterations process blocks in the descending order
of such ordering.
(tested and wasn't great at all)
---------------------------------------------------------
Test whether inertia scaling by density works correctly
-------------------------------------------------------------
add void *mat; to TRISURF and inherit material poinetrs
from convices when intersecting; use them when integrating
over material properties
--------------------------------------------------------
Consider replacing 4-coord cvx->pla with 6-coord one
(hence no CONVEX_Planes routine would be needed)
-------------------------------------------------------------
Add menu "material" between "kinds of" and "results". Within
this menu add friction, cohesio, spring, dahspot, young,
poisson, etc. Render as fields or coloured constraint.
-------------------------------------------------------------
Rendering of contact states
--------------------------------------------------------
Optimize W assembly in parallel by using left product
for blocks with dia->adjext != NULL and right product
for the remaining (internal) nodes.
-----------------------------------------------------------------------
Further optimize W assembling by introducing norm of constact state
change and opdating W blocks only corresponding to a sufficiently
large contact statate change (say point and normal difference relative norm)
-------------------------------------------------------------------------------
Test PBF file size limitation fixup
-------------------------------------------------------
Data compression/decompression in COMALL and others ?
-----------------------------------------------------------
Reduce parallel balancing communication during fully explicit runs
(e.g. external constraints sent only from children to parents)
---------------------------------------------------------------
Include (at least in the viewer mode) possibility of dumping
into a separate sub-directory of a subset of results
-------------------------------------------------------------------
How to implementing rewinding back of simulations during
which bodies have been deleted? (do not really delete)
------------------------------------------------------------------------------
bod->inverse sending for DEF_IMP/LIM/LIM2 schemes in parallel !!
Currently bod->inverse is inconsistently updated in parallel for implicit schemes
----------------------------------------------------------------------------------
Gap computation is not robust. Implicitly integrated core at smaller time steps
reports unphysical penetration => this is due to numerical instability of gap
computations for smaller motion increments.
-------------------------------------------------------------------------------
Optimize WR product by summing up preated off-diagonal W(i,j) blocks for two-point two-body constraints
--------------------------------------------------------------------------
Show that regularizing |UT| norm in SMOOTHED_VAR... does not do good
--------------------------------------------------------------------------------------------
Implement FULL body migration (as it used to be): let bodies be stored only where
they are needed at a time (rather than on all processors as now); make the current way
of storing bodies optional - indicate that it saves communication time and pays off
in case of not too large models
--------------------------------------------------------------------------
Optimize LINSYS:
  a) Update residual only for firts Newton step; then use zero
     (this save communication in parallel)
  b) Do not assemble T(i, j) = TT (i, i) * W (i, j) for SMOOTHED_;
     instead sum up W(i,j) into T(i,j) and store TT separately;
     multiply accordingly in Matvec
  c) Precompute and invert preconditioner right after matrix update;
     (this will save time spent on iversions of diagonal blocks)
----------------------------------------------------------------------------------------------
Implement fixed point aproach on S = |UT| for De Saxce formulation as suggested by V. Acary
--------------------------------------------------------------------------------------------
Implement automated splitting of FEM bodies (a'la Metis) into a user
defined number of glued sub-bodies (parallelism for large meshes);
mind disabling contact detection on gluing interfaces
-----------------------------------------------------------------------
